// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// UserGroup model
model UserGroup {
  groupId String @map("group_id")
  userId  String @map("user_id")
  group   Group  @relation(fields: [groupId], references: [id])

  @@id([groupId, userId])
}

// Group model
model Group {
  id          String      @id @default(uuid()) // PK
  name        String
  description String?
  shareKey    String      @unique @map("share_key")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  creatorId   String      @map("creator_id")
  scenarios   Scenario[]
  UserGroup   UserGroup[]
}

// Scenario model
model Scenario {
  id           String         @id @default(uuid()) // PK
  name         String
  description  String?
  imageKey     String?        @map("image_key")
  groupId      String         @map("group_id")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  group        Group          @relation(fields: [groupId], references: [id]) // belongs to Group (many-to-one)
  ScenarioUser ScenarioUser[]
}

// ScenarioUser model
model ScenarioUser {
  scenarioId String   @map("scenario_id")
  userId     String   @map("user_id")
  scenario   Scenario @relation(fields: [scenarioId], references: [id]) // read by User (many-to-many)

  @@id([scenarioId, userId])
}
